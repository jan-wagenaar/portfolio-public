{"version":3,"file":"component---src-pages-work-js-f3803f813c0764c636e0.js","mappings":"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","sources":["webpack://jan-wagenaar-v2/./src/components/base/card.js","webpack://jan-wagenaar-v2/./src/components/page-content/work-content.js","webpack://jan-wagenaar-v2/./src/pages/work.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Card = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 15rem;\r\n    height: 18rem;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport default Card;","import React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\nimport styled, {css} from 'styled-components';\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\r\n\r\nimport { LayoutGrid } from '../layout/layout';\r\nimport BaseLink from '../base/links/base-link';\r\nimport Card from '../base/card';\r\n\r\nimport breakpoints from '../layout/breakpoints';\r\n\r\nconst WorkGridWrapper = ({posts}) => {\r\n    return (\r\n        <LayoutGrid columnCenter maxWidth='70rem' >\r\n            {posts.map(item => <WorkCard key={item.id} title={item.name} slug={item.slug} featuredImage={item.featuredImage.localFile} />)}\r\n        </LayoutGrid>\r\n    )\r\n};\r\n\r\nconst WorkCard = ({title, slug, featuredImage}) => {\r\n    const image = getImage(featuredImage);\r\n\r\n    return (\r\n    <BaseLink to={`/work/${slug}`}>\r\n        <WorkCardWrapper>\r\n                <WorkCardImage image={image} alt=\"screenshot\" />  \r\n                <WorkCardText>{title}</WorkCardText> \r\n        </WorkCardWrapper>\r\n    </BaseLink>\r\n    )\r\n};\r\n\r\nconst WorkCardWrapper = styled(Card)`\r\n    z-index: 0;\r\n    overflow: hidden;\r\n\r\n\r\n\r\n    &::after {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        height: 100%;\r\n        width: 100%;\r\n        background-color: var(--color-primary-1);\r\n        opacity: 0;\r\n        transition: all var(--transition-base);\r\n        z-index: 1;\r\n    }\r\n\r\n    &:hover::after {\r\n        opacity: 0.95;   \r\n    }\r\n`;\r\n\r\nconst WorkCardImage = styled(GatsbyImage)`\r\n    height: 100%;\r\n`;\r\n\r\nconst WorkCardText = styled.span`\r\n    position: absolute;\r\n    left: var(--spacing-m);\r\n    bottom: -5rem;\r\n    margin: 0;\r\n    color: var(--color-neutral-0);\r\n    font-size: var(--font-size-l);\r\n    font-weight: var(--font-weight-bold);\r\n    transition: all var(--transition-fast);\r\n    z-index: 2;\r\n\r\n    ${WorkCardWrapper}:hover & {\r\n        bottom: var(--spacing-m);\r\n    }\r\n`;\r\n\r\nconst WorkFilters = ({selectedCategory, setCategory}) => {\r\n    const data = useStaticQuery(graphql`\r\n        query getCategories {\r\n            allStrapiCategory {\r\n                nodes {\r\n                    name\r\n                }\r\n            }\r\n        }       \r\n    `);\r\n\r\n    const handleChange = (e) => {\r\n        setCategory(e.target.dataset.category);\r\n    }\r\n\r\n    return (\r\n        <WorkFiltersWrapper>\r\n            <WorkFilterButton key=\"All\" onClick={handleChange} data-category=\"\" $isActive={selectedCategory === \"\"}>All</WorkFilterButton>\r\n            {data.allStrapiCategory.nodes.slice(0).reverse().map(item => <WorkFilterButton key={item.name} $isActive={selectedCategory === item.name} onClick={handleChange} data-category={item.name}>{item.name}</WorkFilterButton>)}\r\n        </WorkFiltersWrapper>\r\n    )\r\n};\r\n\r\nconst WorkFiltersWrapper = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    margin-top: var(--spacing-m);   \r\n`;\r\n\r\nconst WorkFilterButton = styled.button`\r\n    margin: 0;\r\n    padding: var(--spacing-base); \r\n    min-width: 4rem;\r\n    font-weight: var(--font-weight-semibold);\r\n    color: ${({ $isActive }) => $isActive ? 'var(--color-neutral-1)' : 'var(--color-text)'};\r\n    background-color: ${({ $isActive }) => $isActive ? 'var(--color-neutral-8)' : 'var(--color-neutral-4)'};\r\n    border: none;\r\n    border-radius: 0;\r\n    cursor: pointer;\r\n    appearance: none;\r\n\r\n   ${({ $isActive }) => $isActive && css`\r\n        .dark-mode & {\r\n            color: var(--color-text);\r\n        }\r\n    `}\r\n\r\n    ${breakpoints.sm`\r\n        min-width: 6rem;\r\n        padding: var(--spacing-base) var(--spacing-m);\r\n    `}\r\n`;\r\n\r\nexport {WorkGridWrapper, WorkFilters}","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Page from '../components/layout/page';\r\nimport { LayoutContainer, LayoutItemWrapper, LayoutRow } from '../components/layout/layout';\r\nimport { Heading } from '../components/base/typography';\r\nimport { WorkFilters, WorkGridWrapper } from '../components/page-content/work-content';\r\n\r\nconst WorkPage = ({data}) => {\r\n  const { allStrapiWork } = data;\r\n  const posts = [...allStrapiWork.nodes];\r\n  const [selectedCategory, setSelectedCategory] = React.useState(\"\")\r\n\r\n\r\n  const handleSetCategory = (category) => {\r\n    setSelectedCategory(category);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Page active=\"work\">\r\n        <LayoutContainer>\r\n          <LayoutRow>\r\n            <LayoutItemWrapper rowCenter>\r\n              <Heading level={1}>Work</Heading>\r\n              <WorkFilters \r\n                selectedCategory={selectedCategory} \r\n                setCategory={handleSetCategory} />\r\n              <WorkGridWrapper \r\n                posts={posts.filter(item => selectedCategory === \"\" || item.category.name === selectedCategory)} \r\n              />\r\n            </LayoutItemWrapper>\r\n          </LayoutRow>\r\n        </LayoutContainer>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query getWork {\r\n    allStrapiWork(sort: {createdAt: DESC}) {\r\n      nodes {\r\n        id\r\n        name\r\n        slug\r\n        description {\r\n          data {\r\n            description\r\n          }\r\n        }\r\n        demoUrl\r\n        category {\r\n          name\r\n        }\r\n        workphotos {\r\n          name\r\n          localFile {\r\n            childImageSharp {\r\n              gatsbyImageData(width: 600, placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\r\n            }\r\n          }\r\n        }\r\n        featuredImage {\r\n          localFile {\r\n            childImageSharp {\r\n              gatsbyImageData(width: 200, placeholder: BLURRED, formats: [AUTO, WEBP, AVIF])\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default WorkPage;\r\n"],"names":["styled","div","withConfig","displayName","componentId","WorkGridWrapper","_ref","posts","React","LayoutGrid","columnCenter","maxWidth","map","item","WorkCard","key","id","title","name","slug","featuredImage","localFile","_ref2","image","getImage","BaseLink","to","WorkCardWrapper","WorkCardImage","alt","WorkCardText","Card","GatsbyImage","span","WorkFilters","_ref3","selectedCategory","setCategory","data","useStaticQuery","handleChange","e","target","dataset","category","WorkFiltersWrapper","WorkFilterButton","onClick","$isActive","allStrapiCategory","nodes","slice","reverse","button","_ref4","_ref5","_ref6","css","breakpoints","sm","_templateObject","_taggedTemplateLiteralLoose","allStrapiWork","_toConsumableArray","setSelectedCategory","Page","active","LayoutContainer","LayoutRow","LayoutItemWrapper","rowCenter","Heading","level","filter"],"sourceRoot":""}