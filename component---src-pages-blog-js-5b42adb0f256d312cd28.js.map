{"version":3,"file":"component---src-pages-blog-js-5b42adb0f256d312cd28.js","mappings":"6IAIA,MAAMA,GAAWC,EAAAA,EAAAA,SAAOC,EAAAA,GAASC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,eAAhBJ,CAAgB,ohBA2BjC,K,0LCtBA,MAyCMK,EAAiBL,EAAAA,QAAOM,QAAOJ,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAdJ,CAAc,0HAQ/BO,EAAAA,EAAYC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6GAQdC,EAAkBX,EAAAA,QAAOY,IAAGV,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAVJ,CAAU,0IAS5BO,EAAAA,EAAYC,GAAEK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iGAQpB,MA1EiBI,IAAe,IAAd,KAAEC,GAAMD,EAEtB,OACIE,EAAAA,cAACX,EAAc,KACXW,EAAAA,cAACf,EAAAA,EAAQ,CACLgB,GAAE,SAAWF,EAAKG,MAElBF,EAAAA,cAACL,EAAe,KACZK,EAAAA,cAACG,EAAAA,EAAW,CACRC,MAAOL,EAAKK,MACZC,IAAI,GACJC,OAAO,YACPC,UAAU,QACVC,eAAe,cAI3BR,EAAAA,cAAA,WACIA,EAAAA,cAACf,EAAAA,EAAQ,CACLgB,GAAE,SAAWF,EAAKG,MAElBF,EAAAA,cAACS,EAAAA,EAAO,CACJC,MAAO,GAENX,EAAKY,QAGdX,EAAAA,cAACY,EAAAA,EAAI,CACDC,aAAW,EACXC,wBAAyB,CAAEC,OAAQhB,EAAKiB,WAE5ChB,EAAAA,cAACjB,EAAAA,EAAQ,CACLkB,GAAE,SAAWF,EAAKG,MACrB,cAIQ,ECQzB,MAhDoBe,KAChB,MA0BMC,GA1BOC,EAAAA,EAAAA,IAAe,cA0BTC,cAAcC,MAAMC,KAAI,CAACvB,EAAMwB,KACvC,CACHC,GAAID,EACJrB,KAAMH,EAAKG,KACXS,MAAOZ,EAAKY,MACZP,MAAOL,EAAK0B,MAAMC,UAAUC,gBAAgBC,gBAC5CZ,QAASjB,EAAKiB,QAAQa,KAAKC,oBAAoBC,QAC/CC,YAAajC,EAAKiC,gBAI1B,OACIhC,EAAAA,cAACiC,EAAAA,GAAiB,CACdC,WAAS,EACTC,OAAQ,oBAEPjB,EAAMI,KAAKvB,GAASC,EAAAA,cAACoC,EAAQ,CAACC,IAAKtC,EAAKyB,GAAIzB,KAAMA,MACnC,ECtC5B,MARoBuC,IAERtC,EAAAA,cAACuC,EAAAA,GAAS,KACNvC,EAAAA,cAACiB,EAAW,OCU5B,MAZauB,IAELxC,EAAAA,cAAAA,EAAAA,SAAA,KACAA,EAAAA,cAACyC,EAAAA,EAAI,CAACC,OAAO,QACT1C,EAAAA,cAAC2C,EAAAA,GAAe,KACZ3C,EAAAA,cAACsC,EAAW,Q","sources":["webpack://jan-wagenaar-v2/./src/components/base/links/text-link.js","webpack://jan-wagenaar-v2/./src/components/blog/blog-item.js","webpack://jan-wagenaar-v2/./src/components/blog/blog-wrapper.js","webpack://jan-wagenaar-v2/./src/components/page-content/blog/blog-content.js","webpack://jan-wagenaar-v2/./src/pages/blog.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nimport BaseLink from \"./base-link\";\r\n\r\nconst TextLink = styled(BaseLink)`\r\n    position: relative;\r\n    display: inline-flex;\r\n    align-items: center;\r\n    text-decoration: inherit;\r\n    color: inherit;\r\n    font-size: var(--font-size-m);\r\n    font-weight: var(--font-weight-semibold);\r\n    background-image: linear-gradient(var(--color-primary-1), var(--color-primary-1));\r\n    background-position: 0% 135%;\r\n    background-repeat: no-repeat;\r\n    background-size: 100% 0.4rem;\r\n    transition: background-size var(--transition-fast);\r\n    transition-delay: 0.1s;\r\n    overflow: visible;\r\n    z-index: 0;\r\n    cursor: pointer;\r\n\r\n    &:hover, &:focus, &:active {\r\n        background-size: 100% 0.6rem;\r\n    }\r\n\r\n    strong & {\r\n        font-weight: inherit;\r\n    }\r\n`;\r\n\r\nexport default TextLink;","import React from \"react\";\r\nimport { GatsbyImage } from \"gatsby-plugin-image\";\r\nimport styled from \"styled-components\";\r\n\r\nimport breakpoints from \"../layout/breakpoints\";\r\nimport { Heading, Text } from \"../base/typography\";\r\nimport BaseLink from \"../../components/base/links/base-link\";\r\nimport TextLink from \"../../components/base/links/text-link\";\r\n\r\nconst BlogItem = ({ item }) => {\r\n\r\n    return (\r\n        <StyledBlogItem>\r\n            <BaseLink\r\n                to={`/blog/${item.slug}`}\r\n            >\r\n                <StyledBlogCover>\r\n                    <GatsbyImage\r\n                        image={item.image}\r\n                        alt=\"\"\r\n                        layout=\"fullWidth\"\r\n                        objectFit=\"cover\"\r\n                        objectPosition=\"50% 50%\"\r\n                    />\r\n                </StyledBlogCover>\r\n            </BaseLink>\r\n            <div>\r\n                <BaseLink\r\n                    to={`/blog/${item.slug}`}\r\n                >\r\n                    <Heading \r\n                        level={4}\r\n                    >\r\n                        {item.title}\r\n                    </Heading>\r\n                </BaseLink>\r\n                <Text\r\n                    noTopMargin\r\n                    dangerouslySetInnerHTML={{ __html: item.content }}\r\n                />\r\n                <TextLink\r\n                    to={`/blog/${item.slug}`}\r\n                >\r\n                    Read more\r\n                </TextLink>\r\n            </div>\r\n        </StyledBlogItem>\r\n    )\r\n};\r\n\r\nconst StyledBlogItem = styled.section`\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    max-width: 40rem;\r\n    word-break: break-word;\r\n\r\n    ${breakpoints.md`\r\n        & {\r\n            flex-direction: row;\r\n            gap: var(--spacing-m);\r\n        }\r\n    `}\r\n`;\r\n\r\nconst StyledBlogCover = styled.div`\r\n    display: flex;\r\n    justify-content: center; \r\n    align-items: center;\r\n    max-height: 10rem;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    margin-bottom: var(--spacing-m);\r\n\r\n    ${breakpoints.md`\r\n        & {\r\n            margin-bottom: 0;\r\n            width: 10rem;\r\n        }\r\n    `}\r\n`\r\n\r\nexport default BlogItem;","import React from \"react\";\r\n\r\nimport { LayoutItemWrapper } from \"../layout/layout\";\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\nimport BlogItem from \"./blog-item\";\r\n\r\nconst BlogWrapper = () => {\r\n    const data = useStaticQuery(graphql`\r\n      query getBlogPosts {\r\n        allStrapiPost(sort: {publishedAt: DESC}) {\r\n          nodes {\r\n            title\r\n            slug\r\n            publishedAt(formatString: \"DD-MM-YYYY\")\r\n            cover {\r\n              localFile {\r\n                childImageSharp {\r\n                  gatsbyImageData(aspectRatio: 1)\r\n                }\r\n              }\r\n            }\r\n            content {\r\n              data {\r\n                childMarkdownRemark {\r\n                  excerpt\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }   \r\n    `);\r\n\r\n    const posts = data.allStrapiPost.nodes.map((item, index) => {\r\n        return {\r\n            id: index,\r\n            slug: item.slug,\r\n            title: item.title,\r\n            image: item.cover.localFile.childImageSharp.gatsbyImageData,\r\n            content: item.content.data.childMarkdownRemark.excerpt,\r\n            publishedAt: item.publishedAt\r\n        }\r\n    });\r\n\r\n    return (\r\n        <LayoutItemWrapper \r\n            rowCenter \r\n            rowGap={'var(--spacing-m)'}\r\n        > \r\n            {posts.map((item) => <BlogItem key={item.id} item={item} />)}\r\n        </LayoutItemWrapper>\r\n    )\r\n}   \r\n\r\nexport default BlogWrapper;","import React from \"react\";\r\nimport BlogWrapper from \"../../blog/blog-wrapper\";\r\nimport { LayoutRow } from '../../layout/layout';\r\n\r\nconst BlogContent = () => {\r\n    return (\r\n            <LayoutRow>\r\n                <BlogWrapper />\r\n            </LayoutRow>\r\n            )\r\n}\r\n\r\nexport default BlogContent;\r\n\r\n\r\n","import React from \"react\";\r\nimport Page from '../components/layout/page';\r\nimport { LayoutContainer } from '../components/layout/layout';\r\nimport BlogContent from \"../components/page-content/blog/blog-content\";\r\n\r\nconst Blog = () => {\r\n    return (\r\n        <>\r\n        <Page active=\"blog\">\r\n            <LayoutContainer>\r\n                <BlogContent />\r\n            </LayoutContainer>\r\n        </Page>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Blog;"],"names":["TextLink","styled","BaseLink","withConfig","displayName","componentId","StyledBlogItem","section","breakpoints","md","_templateObject","_taggedTemplateLiteralLoose","StyledBlogCover","div","_templateObject2","_ref","item","React","to","slug","GatsbyImage","image","alt","layout","objectFit","objectPosition","Heading","level","title","Text","noTopMargin","dangerouslySetInnerHTML","__html","content","BlogWrapper","posts","useStaticQuery","allStrapiPost","nodes","map","index","id","cover","localFile","childImageSharp","gatsbyImageData","data","childMarkdownRemark","excerpt","publishedAt","LayoutItemWrapper","rowCenter","rowGap","BlogItem","key","BlogContent","LayoutRow","Blog","Page","active","LayoutContainer"],"sourceRoot":""}